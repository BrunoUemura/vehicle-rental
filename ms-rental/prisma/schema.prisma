generator client {
  provider = "prisma-client-js"
}

// datasource db {
//   provider = "postgresql"
//   url      = env("DATABASE_URL")
// }

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Customer {
  customerId        String          @id
  name              String      
  email             String          @unique
  documentNumber    String          @unique @map("document_number")
  phoneNumber       String          @map("phone_number")
  active            Boolean         @default(true)
  createdAt         DateTime        @default(now()) @map("created_at")
  updatedAt         DateTime        @updatedAt @map("updated_at")
  rentalOrder       RentalOrder[]

  @@map("customer")
}

// enum VehicleType {
//   CAR
//   MOTORCYCLE
// }

model Vehicle {
  vehicleId         String        @id
  name              String    
  model             String    
  brand             String    
  year              Int    
  type              String    
  kilometers        Int    
  plate             String    
  available         Boolean       @default(true)
  createdAt         DateTime      @default(now()) @map("created_at")
  updatedAt         DateTime      @updatedAt @map("updated_at")
  rentalOrder       RentalOrder[]

  @@map("vehicle")
}

model RentalOrder {
  orderId             String         @id @default(uuid()) @map("order_id")
       
  customer            Customer       @relation(fields: [customerId], references: [customerId])
  customerId          String         @map("customer_id")
  vehicle             Vehicle        @relation(fields: [vehicleId], references: [vehicleId])
  vehicleId           String         @map("vehicle_id")
         
  startDate           DateTime       @map("start_date")
  endDate             DateTime       @map("end_date")
  estimatedKM         Int            @map("estimated_km")
  estimatedAmount     Decimal        @map("estimated_amount")
  additionalAmount    Decimal        @default(0.00) @map("additional_amount")
  totalAmount         Decimal        @map("total_amount")
  drivenKM            Int?           @map("driven_km")
  returnedDate        DateTime?      @map("returned_date")
  createdAt           DateTime       @default(now()) @map("created_at")
  updatedAt           DateTime       @updatedAt @map("updated_at")
  canceledAt          DateTime?      @map("canceled_at")

  @@map("rental_order")
}

